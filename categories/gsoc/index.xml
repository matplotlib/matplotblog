<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GSoC on Matplotblog</title><link>https://matplotlib.org/matplotblog/categories/gsoc/</link><description>Recent content in GSoC on Matplotblog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Aug 2021 17:36:40 +0530</lastBuildDate><atom:link href="https://matplotlib.org/matplotblog/categories/gsoc/index.xml" rel="self" type="application/rss+xml"/><item><title>GSoC'21: Final Report</title><link>https://matplotlib.org/matplotblog/posts/gsoc_2021_final/</link><pubDate>Tue, 17 Aug 2021 17:36:40 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_2021_final/</guid><description>Matplotlib: Revisiting Text/Font Handling
To kick things off for the final report, here's a meme to nudge about the previous blogs.
About Matplotlib Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations, which has become a de-facto Python plotting library.
Much of the implementation behind its font manager is inspired by W3C compliant algorithms, allowing users to interact with font properties like font-size, font-weight, font-family, etc.
However, the way Matplotlib handled fonts and general text layout was not ideal, which is what Summer 2021 was all about.</description></item><item><title>GSoC'21: Quarter Progress</title><link>https://matplotlib.org/matplotblog/posts/gsoc_2021_quarter/</link><pubDate>Tue, 03 Aug 2021 18:48:00 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_2021_quarter/</guid><description>“Matplotlib, I want 多个汉字 in between my text.”
Let's say you asked Matplotlib to render a plot with some label containing 多个汉字 (multiple Chinese characters) in between your English text.
Or conversely, let's say you use a Chinese font with Matplotlib, but you had English text in between (which is quite common).
Assumption: the Chinese font doesn't have those English glyphs, and vice versa
With this short writeup, I'll talk about how does a migration from a font-first to a text-first approach in Matplotlib looks like, which ideally solves the above problem.</description></item><item><title>GSoC'21: Pre-Quarter Progress</title><link>https://matplotlib.org/matplotblog/posts/gsoc_2021_prequarter/</link><pubDate>Mon, 19 Jul 2021 07:32:05 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_2021_prequarter/</guid><description>“Well? Did you get it working?!”
Before I answer that question, if you're missing the context, check out my previous blog&amp;lsquo;s last few lines.. promise it won't take you more than 30 seconds to get the whole problem!
With this short writeup, I intend to talk about what we did and why we did, what we did. XD
Ostrich Algorithm Ring any bells? Remember OS (Operating Systems)? It's one of the core CS subjects which I bunked then and regret now.</description></item><item><title>GSoC'21: Mid-Term Progress</title><link>https://matplotlib.org/matplotblog/posts/gsoc_2021_midterm/</link><pubDate>Fri, 02 Jul 2021 08:32:05 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_2021_midterm/</guid><description>&amp;ldquo;Aitik, how is your GSoC going?&amp;rdquo;
Well, it's been a while since I last wrote. But I wasn't spending time watching Loki either! (that's a lie.)
During this period the project took on some interesting (and stressful) curves, which I intend to talk about in this small writeup.
New Mentor! The first week of coding period, and I met one of my new mentors, Jouni. Without him, along with Tom and Antony, the project wouldn't have moved an inch.</description></item><item><title>Aitik Gupta joins as a Student Developer under GSoC'21</title><link>https://matplotlib.org/matplotblog/posts/gsoc_2021_introduction/</link><pubDate>Wed, 19 May 2021 20:03:57 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_2021_introduction/</guid><description>The day of result, was a very, very long day.
With this small writeup, I intend to talk about everything before that day, my experiences, my journey, and the role of Matplotlib throughout!
About Me I am a third-year undergraduate student currently pursuing a Dual Degree (B.Tech + M.Tech) in Information Technology at Indian Institute of Information Technology, Gwalior.
During my sophomore year, my interests started expanding in the domain of Machine Learning, where I learnt about various amazing open-source libraries like NumPy, SciPy, pandas, and Matplotlib!</description></item><item><title>GSoC 2020 Work Product - Baseline Images Problem</title><link>https://matplotlib.org/matplotblog/posts/gsoc_2020_final_work_product/</link><pubDate>Sun, 16 Aug 2020 09:47:51 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_2020_final_work_product/</guid><description>Google Summer of Code 2020 is completed. Hurray!! This post discusses about the progress so far in the three months of the coding period from 1 June to 24 August 2020 regarding the project Baseline Images Problem under matplotlib organisation under the umbrella of NumFOCUS organization.
Project Details: This project helps with the difficulty in adding/modifying tests which require a baseline image. Baseline images are problematic because
Baseline images cause the repo size to grow rather quickly.</description></item><item><title>GSoC Coding Phase 3 Blog 1</title><link>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_5/</link><pubDate>Sat, 08 Aug 2020 09:47:51 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_5/</guid><description>Google Summer of Code 2020's second evaluation is completed. I passed!!! Hurray! Now we are in the mid way of the last evaluation. This post discusses about the progress so far in the first two weeks of the third coding period from 26 July to 9 August 2020.
Completion of the modification logic for the matplotlib_baseline_images package We successfully created the matplotlib_baseline_image_generation command line flag for baseline image generation for matplotlib and mpl_toolkits in the previous months.</description></item><item><title>GSoC Coding Phase 2 Blog 2</title><link>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_4/</link><pubDate>Thu, 23 Jul 2020 19:47:51 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_4/</guid><description>Google Summer of Code 2020's second evaluation is about to complete. Now we are about to start with the final coding phase. This post discusses about the progress so far in the last two weeks of the second coding period from 13 July to 26 July 2020.
Modular approach towards removal of matplotlib baseline images We have divided the work in two parts as discussed in the previous blog. The first part is the generation of the baseline images discussed below.</description></item><item><title>GSoC Coding Phase 2 Blog 1</title><link>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_3/</link><pubDate>Sat, 11 Jul 2020 19:47:51 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_3/</guid><description>Google Summer of Code 2020's first evaluation is completed. I passed!!! Hurray! Now we are in the mid way of the second evaluation. This post discusses about the progress so far in the first two weeks of the second coding period from 30 June to 12 July 2020.
Completion of the matplotlib_baseline_images package We successfully created the matplotlib_baseline_images package. It contains the matplotlib and the matplotlib toolkit baseline images. Symlinking is done for the baseline images, related changes for Travis, appvoyer, azure pipelines etc.</description></item><item><title>GSoC Coding Phase 1 Blog 2</title><link>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_2/</link><pubDate>Wed, 24 Jun 2020 16:47:51 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_2/</guid><description>Google Summer of Code 2020's first evaluation is about to complete. This post discusses about the progress so far in the last two weeks of the first coding period from 15 June to 30 June 2020.
Completion of the demo package We successfully created the demo app and uploaded it to the test.pypi. It contains the main and the secondary package. The main package is analogous to the matplotlib and secondary package is analogous to the matplotlib_baseline_images package as discussed in the previous blog.</description></item><item><title>GSoC Coding Phase 1 Blog 1</title><link>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_1/</link><pubDate>Tue, 09 Jun 2020 16:47:51 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/gsoc_coding_phase_blog_1/</guid><description>I Sidharth Bansal, was waiting for the coding period to start from the March end so that I can make my hands dirty with the code. Finally, coding period has started. Two weeks have passed. This blog contains information about the progress so far from 1 June to 14 June 2020.
Movement from mpl-test and mpl packages to mpl and mpl-baseline-images packages Initially, we thought of creating a mpl-test and mpl package.</description></item><item><title>Sidharth Bansal joined as GSoC'20 intern</title><link>https://matplotlib.org/matplotblog/posts/introductory-gsoc2020-post/</link><pubDate>Wed, 06 May 2020 21:47:36 +0530</pubDate><guid>https://matplotlib.org/matplotblog/posts/introductory-gsoc2020-post/</guid><description>When I, Sidharth Bansal, heard I got selected in Google Summer of Code(GSOC) 2020 with Matplotlib under Numfocus, I was jumping and dancing. In this post, I talk about my past experiences, how I got selected for GSOC with Matplotlib, and my project details. I am grateful to the community :)
About me: I am currently pursuing a Bachelor’s in Technology in Software Engineering at Delhi Technological University, Delhi, India. I started my journey of open source with Public Lab, an open-source organization as a full-stack Ruby on Rails web developer.</description></item></channel></rss>